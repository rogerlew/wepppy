from __future__ import annotations

from typing import Callable

from rq.job import Job

_hostname: str
REDIS_HOST: str
RQ_DB: int
TIMEOUT: int
send_discord_message: Callable[[str], None] | None

def compress_fn(fn: str) -> None: ...

def run_ss_batch_hillslope_rq(
    runid: str,
    wepp_id: int,
    wepp_bin: str | None = ...,
    ss_batch_id: int | None = ...,
) -> tuple[bool, float]: ...

def run_hillslope_rq(runid: str, wepp_id: int, wepp_bin: str | None = ...) -> tuple[bool, float]: ...

def run_flowpath_rq(runid: str, flowpath: str, wepp_bin: str | None = ...) -> tuple[bool, float]: ...

def run_watershed_rq(runid: str, wepp_bin: str | None = ...) -> tuple[bool, float]: ...

def run_ss_batch_watershed_rq(
    runid: str,
    wepp_bin: str | None = ...,
    ss_batch_id: int | None = ...,
) -> tuple[bool, float]: ...

def run_wepp_rq(runid: str) -> Job: ...

def _prep_multi_ofe_rq(runid: str) -> None: ...

def _prep_slopes_rq(runid: str) -> None: ...

def _run_hillslopes_rq(runid: str) -> None: ...

def _run_flowpaths_rq(runid: str) -> None: ...

def _prep_managements_rq(runid: str) -> None: ...

def _prep_soils_rq(runid: str) -> None: ...

def _prep_climates_rq(runid: str) -> None: ...

def _prep_remaining_rq(runid: str) -> None: ...

def _prep_watershed_rq(runid: str) -> None: ...

def _post_run_cleanup_out_rq(runid: str) -> None: ...

def _analyze_return_periods_rq(runid: str) -> None: ...

def _build_hillslope_interchange_rq(runid: str) -> None: ...

def _build_totalwatsed3_rq(runid: str) -> None: ...

def _run_hillslope_watbal_rq(runid: str) -> None: ...

def _post_prep_details_rq(runid: str) -> None: ...

def _post_watershed_interchange_rq(runid: str) -> None: ...

def _post_legacy_arc_export_rq(runid: str) -> None: ...

def _post_gpkg_export_rq(runid: str) -> None: ...

def post_dss_export_rq(runid: str) -> None: ...

def _post_make_loss_grid_rq(runid: str) -> None: ...

def _log_complete_rq(runid: str) -> None: ...
