{
  "version": 3,
  "file": "leaflet-glify-layer.js",
  "sources": [
    "../src/js/L.Glify.Layer.js"
  ],
  "sourcesContent": [
    "import glify from 'leaflet.glify';\nimport sortWorker from 'web-worker:./sortWorker';\n\nconst GlifyLayer = L.Layer.extend({\n\n\t/*------------------------------------ LEAFLET SPECIFIC ------------------------------------------*/\n\n\t_map: null,\n\n\t// the DOM leaflet-pane that contains our layer\n\t_pane: null,\n\t_paneName: 'overlayPane',\n\n\t_shapesLayer: null,\n\t_linesLayer: null,\n\t_pointssLayer: null,\n\n\t// user options\n\toptions: {\n\t\ttypes: null,\n\t\tgeojson: null\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\t/**\n\t * @param map {Object} Leaflet map\n\t */\n\tonAdd: function (map) {\n\t\t\n\t\tthis._map = map;\n\t\tthis.options.glifyOptions.map = this._map;\n\t\tthis._setPane();\n\t\tthis.options.glifyOptions.pane = this._paneName;\n\n\t\tthis._shapes = [];\n\t\tthis._lines = [];\n\t\tthis._points = [];\n\n\t\tthis._glifyOptions = {\n\t\t\tborder: true,\n\t\t\topacity: 0.2,\n\t\t\tsize: 10,\n\t\t\tcolor: { r: 0.2, g: 0.5333333333333333, b: 1, a: 0 }\n\t\t};\n\n\t\t// merge user options with defaults\n\t\tthis._glifyOptions = Object.assign(this._glifyOptions, this.options.glifyOptions);\t\n\n\t\tif(!this.options.types && this.options.geojson) {\n\t\t\t\n\t\t\tthis._separateTypes();\n\t\t\n\t\t} else if(this.options.types) {\n\t\t\n\t\t\tthis._shapes = this.options.types.shapes ?  this._clone(this.options.types.shapes) : {};\n\t\t\tthis._lines = this.options.types.lines ?  this._clone(this.options.types.lines) : {};\n\t\t\tthis._points = this.options.types.points ? this.options.types.points.features.slice().map(f => f.geometry.coordinates) : [];\t\n\t\t\t\n\t\t\tthis._createLayers();\n\t\t\n\t\t} else {\n\t\t\tconsole.error('No geojson or separate types provided.');\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// callback\n\t\tif (this.options.onAdd) this.options.onAdd();\n\t},\n\n\t/**\n\t * Remove the pane from DOM, and void pane when layer removed from map\n\t */\n\tonRemove() {\n\t\tthis.remove();\n\t\tif (this.options.onRemove) this.options.onRemove();\n\t},\n\n\t/*------------------------------------ PUBLIC ------------------------------------------*/\n\n\t/**\n\t * Returns [L.latLngBounds](https://leafletjs.com/reference-1.7.1.html#latlngbounds)\n\t * for the L.glify.layer\n\t */\n\tgetBounds() {\n\t\tlet flatCoords = [];\n\t\tif (this._shapesLayer) {\t\t\n\t\t\tflatCoords = flatCoords.concat(this._shapes.features.map(f => f.geometry.coordinates[0]).flat());\n\t\t}\n\t\tif (this._linesLayer) {\n\t\t\tflatCoords = flatCoords.concat(this._lines.features.map(f => f.geometry.coordinates).flat());\n\t\t}\n\t\tif (this._pointsLayer) {\n\t\t\tflatCoords = flatCoords.concat(this._points);\n\t\t}\n\t\treturn L.latLngBounds(flatCoords.map(c => [c[1], c[0]] ));\n\t},\n\n\t/**\n\t * Exec update() on each glify layer\n\t * @param {object} data \n\t * @param {number} index \n\t */\n\tupdate(data, index) {\n\t\tif (this._shapesLayer) this._shapesLayer.update(data, index);\n\t\tif (this._linesLayer) this._linesLayer.update(data, index);\n\t\tif (this._pointsLayer) this._pointsLayer.update(data, index);\n\t},\n\n\t/** \n\t * Exec remove() on each glify layer\n\t*/\n\tremove(index) {\n\t\tif (this._shapesLayer) this._shapesLayer.remove(index);\n\t\tif (this._linesLayer) this._linesLayer.remove(index);\n\t\tif (this._pointsLayer) this._pointsLayer.remove(index);\n\t},\n\n\t/**\n\t * Re-render layers\n\t */\n\trender() {\n\t  if (this._shapesLayer) this._shapesLayer.render();\n\t\tif (this._linesLayer) this._linesLayer.render();\n\t\tif (this._pointsLayer) this._pointsLayer.render();\n\t},\n\n\t/**\n\t * Update layer style options\n\t * @param {object} options\n\t * @param {boolean} options.border\n\t * @param {function|object|string} options.color\n\t * @param {number} options.opacity\n\t * @param {number} options.size\n\t */\n\tsetStyle(options) {\n\t\tif (this._shapesLayer) {\n\t\t\tthis._shapesLayer.settings = Object.assign(this._shapesLayer.settings, options);\n\t\t\tthis._shapesLayer.render();\n\t\t}\n\t\tif (this._linesLayer) {\n\t\t\tthis._linesLayer.settings = Object.assign(this._linesLayer.settings, options);\n\t\t\tthis._linesLayer.render();\n\t\t}\n\t\tif (this._pointsLayer) {\n\t\t\tthis._pointsLayer.settings = Object.assign(this._pointsLayer.settings, options);\n\t\t\tthis._pointsLayer.render();\n\t\t}\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\t_createLayers(){\n\t\tif(this._shapes.features) {\n\t\t\t\tthis._glifyOptions.data = this._shapes;\t\n\t\t\t\tthis._shapesLayer = L.glify.shapes(this._glifyOptions);\n\t\t}\n\n\t\t// coords for lines and points is inverted..  :`(\n\t\t// https://github.com/robertleeplummerjr/Leaflet.glify/issues/78\n\t\t// https://github.com/danwild/Leaflet.glify.layer/issues/1\n\t\tthis._glifyOptions.latitudeKey = 1;\n\t\tthis._glifyOptions.longitudeKey = 0;\n\n\t\tif(this._lines.features) {\n\t\t\tthis._glifyOptions.data = this._lines;\t\n\t\t\tthis._linesLayer = L.glify.lines(this._glifyOptions);\n\t\t}\n\n\t\tif(this._points.length > 0) {\n\t\t\tthis._glifyOptions.data = this._points;\t\n\t\t\tthis._pointsLayer = L.glify.points(this._glifyOptions);\n\t\t}\n\t\tif (this.options.onLayersInit) this.options.onLayersInit();\n\n\t\t// restore inversion..\n\t\tthis._glifyOptions.latitudeKey = 0;\n\t\tthis._glifyOptions.longitudeKey = 1;\n\t},\n\n\t/**\n\t * Kick off worker job/s to compute keyframes from features.\n\t */\n\t_separateTypes() {\n\n\t\tconst numWorkers = this.options.numWorkers || window.navigator.hardwareConcurrency;\n\t\t\n\t\t// split features into chunks for worker\n\t\tconst features = this.options.geojson.features.slice();\n\t\tconst featureChunks = this._chunkArray(features, numWorkers);\n\t\t\n\t\tlet running = 0;\n\t\n\t\tconst workerDone = (e) => {\n\t\t\trunning -= 1;\n\n\t\t\t// features\n\t\t\tthis._shapes = this._shapes.concat(e.data.shapes);\n\t\t\tthis._lines = this._lines.concat(e.data.lines);\n\t\t\t\n\t\t\t// coords array..\n\t\t\tthis._points = this._points.concat(e.data.points);\n\t\t\t\n\t\t\tif(running < 1) {\n\t\t\t\tthis._shapes = { type: \"FeatureCollection\", features: this._shapes };\n\t\t\t\tthis._lines = { type: \"FeatureCollection\", features: this._lines };\n\n\t\t\t\tthis._createLayers();\n\t\t\t}\n\t\t}\n\n    for(let i = 0; i < numWorkers; i += 1) {\n      running += 1;\n      const tWorker = new sortWorker();\n      tWorker.onmessage = workerDone;\n      tWorker.postMessage({ features: featureChunks[i] });\n\t\t}\n\t},\n\n\t/**\n\t * Create custom pane if necessary\n\t * @private\n\t */\n\t_setPane() {\n\t\t// determine where to add the layer\n\t\tthis._paneName = this.options.paneName || 'overlayPane';\n\n\t\t// fall back to overlayPane for leaflet < 1\n\t\tlet pane = this._map._panes.overlayPane\n\t\tif (this._map.getPane) {\n\t\t\t// attempt to get pane first to preserve parent (createPane voids this)\n\t\t\tpane = this._map.getPane(this._paneName);\n\t\t\tif (!pane) {\n\t\t\t\tpane = this._map.createPane(this._paneName);\n\t\t\t}\n\t\t}\n\n\t\tthis._pane = pane;\n\t},\n\n\t/**\n\t * Divide an array into n chunks\n\t * @param {array} array \n\t * @param {number} parts \n\t */\n\t_chunkArray(array, parts) {\n\t\tlet result = [];\n\t\tfor (let i = parts; i > 0; i--) {\n\t\t\t\tresult.push(array.splice(0, Math.ceil(array.length / i)));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n   * Clones the target, unsafe for objects with\n   * circular refs\n   * @param {object} target\n   */\n  _clone(target) {\n    if (!target) return target;\n    return JSON.parse(JSON.stringify(target));\n  },\n\n});\n\nL.glify.layer = function (options) {\n\treturn new GlifyLayer(options);\n};\n\nexport default L.glify.layer;\n\n\n"
  ],
  "names": [
    "GlifyLayer",
    "L",
    "Layer",
    "extend",
    "_map",
    "_pane",
    "_paneName",
    "_shapesLayer",
    "_linesLayer",
    "_pointssLayer",
    "options",
    "types",
    "geojson",
    "initialize",
    "setOptions",
    "onAdd",
    "map",
    "glifyOptions",
    "_setPane",
    "pane",
    "_shapes",
    "_lines",
    "_points",
    "_glifyOptions",
    "border",
    "opacity",
    "size",
    "color",
    "r",
    "g",
    "b",
    "a",
    "Object",
    "assign",
    "_separateTypes",
    "shapes",
    "_clone",
    "lines",
    "points",
    "features",
    "slice",
    "f",
    "geometry",
    "coordinates",
    "_createLayers",
    "console",
    "error",
    "onRemove",
    "remove",
    "getBounds",
    "flatCoords",
    "concat",
    "flat",
    "_pointsLayer",
    "latLngBounds",
    "c",
    "update",
    "data",
    "index",
    "render",
    "setStyle",
    "settings",
    "glify",
    "latitudeKey",
    "longitudeKey",
    "length",
    "onLayersInit",
    "numWorkers",
    "window",
    "navigator",
    "hardwareConcurrency",
    "featureChunks",
    "_chunkArray",
    "running",
    "workerDone",
    "e",
    "type",
    "i",
    "tWorker",
    "sortWorker",
    "onmessage",
    "postMessage",
    "paneName",
    "_panes",
    "overlayPane",
    "getPane",
    "createPane",
    "array",
    "parts",
    "result",
    "push",
    "splice",
    "Math",
    "ceil",
    "target",
    "JSON",
    "parse",
    "stringify",
    "layer"
  ],
  "mappings": "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"
}