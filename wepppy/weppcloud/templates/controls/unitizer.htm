{% set is_english = unitizer_nodb.is_english %}
<section class="wc-unitizer">
  <div class="wc-unitizer__global">
    <h3 class="wc-unitizer__heading">Global Preference</h3>
    <p class="wc-unitizer__hint">
      Choose the default unit system for all measurements.
    </p>
    <div class="wc-choice-group wc-choice-group--horizontal"
         role="radiogroup"
         aria-label="Global unit preference">
      <label class="wc-choice">
        <input type="radio"
               name="uni_main_selector"
               value="0"
               {% if is_english is defined and not is_english %}checked{% endif %}>
        <span class="wc-choice__body">
          <span class="wc-choice__label">SI</span>
          <span class="wc-choice__description">Metric defaults</span>
        </span>
      </label>
      <label class="wc-choice">
        <input type="radio"
               name="uni_main_selector"
               value="1"
               {% if is_english %}checked{% endif %}>
        <span class="wc-choice__body">
          <span class="wc-choice__label">English</span>
          <span class="wc-choice__description">US customary defaults</span>
        </span>
      </label>
    </div>
  </div>

  <details class="wc-unitizer__details" open>
    <summary class="wc-unitizer__summary">
      <span class="wc-unitizer__summary-title">Unit Preferences</span>
      <span class="wc-unitizer__summary-hint">
        Override defaults for individual measurement categories.
      </span>
    </summary>
    <div class="wc-unitizer__panel">
      <div class="wc-unitizer__scroll">
        {% for unitclass, units in precisions.items() %}
        {% set group_id = 'unitizer_' ~ unitclass ~ '_label' %}
        {% set preferred = unitizer_nodb.preferences[unitclass] %}
        <section class="wc-unitizer__category" data-unitizer-category="{{ unitclass }}">
          <header class="wc-unitizer__category-header">
            <h4 class="wc-unitizer__category-title" id="{{ group_id }}">
              {{ unitclass.replace('_', ' ').replace('-', ' ')|title }}
            </h4>
          </header>
          <div class="wc-choice-group wc-choice-group--wrap"
               role="radiogroup"
               aria-labelledby="{{ group_id }}">
            {% for units_key, precision in units.items() %}
            {% set token = cls_units(units_key) %}
            <label class="wc-choice">
              <input type="radio"
                     name="unitizer_{{ unitclass }}_radio"
                     value="{{ token }}"
                     {% if preferred == units_key %}checked{% endif %}
                     onchange="Project.getInstance().handleUnitPreferenceChange()">
              <span class="wc-choice__body">
                <span class="wc-choice__label">{{ str_units(units_key) | safe }}</span>
              </span>
            </label>
            {% endfor %}
          </div>
        </section>
        {% endfor %}
      </div>
    </div>
  </details>
</section>
<script>
function setGlobalUnitizerPreference(pref) {
  var project = (window.Project && typeof window.Project.getInstance === "function")
    ? window.Project.getInstance()
    : null;
  var handlerType = project && project.handleGlobalUnitPreference;
  if (typeof console !== "undefined" && typeof console.log === "function") {
    console.log('[Unitizer Template] setGlobalUnitizerPreference called with', pref, project, typeof handlerType);
  }
  var targetValue = String(pref);
  var radios = document.querySelectorAll("input[name='uni_main_selector']");
  if (radios && radios.length) {
    Array.prototype.forEach.call(radios, function (radio) {
      radio.checked = (radio.value === targetValue);
    });
  }
  if (!project || typeof handlerType !== "function") {
    return;
  }
  project.handleGlobalUnitPreference(pref);
}

(function bindGlobalUnitizerPreferenceRadios() {
  var radios = document.querySelectorAll("input[name='uni_main_selector']");
  if (!radios || radios.length === 0) {
    return;
  }
  if (typeof console !== "undefined" && typeof console.log === "function") {
    console.log("[Unitizer Template] binding global unit preference radios", radios.length);
  }
  Array.prototype.forEach.call(radios, function (el) {
    if (el.dataset && el.dataset.unitizerGlobalBound === "true") {
      return;
    }
    var handler = function (event) {
      if (typeof console !== "undefined" && typeof console.log === "function") {
        console.log("[Unitizer Template] global unit preference change", event.type, event.target.value);
      }
      if (typeof window.setGlobalUnitizerPreference === "function") {
        window.setGlobalUnitizerPreference(event.target.value);
      }
    };
    el.addEventListener("change", handler);
    el.addEventListener("input", handler);
    el.addEventListener("click", handler);
    if (el.dataset) {
      el.dataset.unitizerGlobalBound = "true";
    }
  });
})();
</script>
