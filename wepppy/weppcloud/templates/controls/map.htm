{% import "controls/_pure_macros.html" as ui %}
{% from "shared/console_macros.htm" import button_row %}

{% set show_landuse_modify = ron.enable_landuse_change %}
{% set show_rangeland_modify = 'rangeland_cover' in ron.mods %}
{% set show_rap = 'rap' in ron.mods %}

{% set sub_cmap_options = [
  {
    "id": "sub_cmap_radio_default",
    "label": "Default",
    "value": "default",
    "selected": True
  },
  {
    "id": "sub_cmap_radio_slp_asp",
    "label": "Slope/Aspect",
    "value": "slp_asp",
    "disabled": True
  },
  {
    "id": "sub_cmap_radio_dom_lc",
    "label": "Dominant Landcover",
    "value": "dom_lc",
    "disabled": True
  },
  {
    "id": "sub_cmap_radio_dom_soil",
    "label": "Dominant Soil",
    "value": "dom_soil",
    "disabled": True
  }
] %}
{% if show_rangeland_modify %}
  {% set sub_cmap_options = sub_cmap_options + [
    {
      "id": "sub_cmap_radio_rangeland_cover",
      "label": "Rangeland Cover",
      "value": "rangeland_cover",
      "disabled": True
    }
  ] %}
{% endif %}
{% if show_rap %}
  {% set sub_cmap_options = sub_cmap_options + [
    {
      "id": "sub_cmap_radio_landuse_cover",
      "label": "Vegetation Cover (%)",
      "value": "landuse_cover"
    }
  ] %}
{% endif %}

{% set sub_layer_selection_content %}
  <h3 class="wc-map-panel__title">Subcatchment Colormapping</h3>
  {{ ui.radio_group(
       "sub_cmap_radio",
       label="Subcatchment color map",
       layout="vertical",
       options=sub_cmap_options
     ) }}
  {% if show_rap %}
    <div class="wc-map-legend">
      <span id="landuse_sub_cmap_canvas_cover_units" class="wc-color-scale__units"></span>
      <div class="wc-color-scale__bar">
        <canvas
          id="landuse_sub_cmap_canvas_cover"
          class="wc-color-scale__canvas"
          width="200"
          height="20"></canvas>
      </div>
      <div class="wc-color-scale__labels">
        <span id="landuse_sub_cmap_canvas_cover_min"></span>
        <span id="landuse_sub_cmap_canvas_cover_max"></span>
      </div>
    </div>
  {% endif %}
  <div id="sbs_legend" class="wc-map-legend" aria-live="polite"></div>
  <div id="sub_legend" class="wc-map-legend" aria-live="polite"></div>
{% endset %}

{% set drilldown_content %}
  <p class="wc-text-muted">Select a channel or hillslope to view information.</p>
{% endset %}

{% set results_content %}
  {% if 'rhem' not in ron.mods %}
    {% include "controls/map/wepp_hillslope_visualizations.htm" %}
  {% else %}
    {% include "controls/map/rhem_hillslope_visualizations.htm" %}
  {% endif %}
{% endset %}

{% if show_landuse_modify %}
  {% set modify_landuse_content %}
    {% include "controls/modify_landuse.htm" %}
  {% endset %}
{% endif %}

{% if show_rangeland_modify %}
  {% set modify_rangeland_content %}
    {% include "controls/modify_rangeland_cover.htm" %}
  {% endset %}
{% endif %}

{% set map_tabs = [
  {
    "id": "sub_layer_selection",
    "label": "Layers",
    "icon": '<span aria-hidden="true">üó∫Ô∏è</span>',
    "active": True,
    "content": sub_layer_selection_content
  },
  {
    "id": "drilldown",
    "label": "Drilldown",
    "icon": '<span aria-hidden="true">üîé</span>',
    "content": drilldown_content
  }
] %}

{% if show_landuse_modify %}
  {% set map_tabs = map_tabs + [
    {
      "id": "modify",
      "label": "Modify Landuse",
      "icon": '<span aria-hidden="true">üõ†Ô∏è</span>',
      "content": modify_landuse_content
    }
  ] %}
{% endif %}

{% if show_rangeland_modify %}
  {% set map_tabs = map_tabs + [
    {
      "id": "modify_rangeland_cover",
      "label": "Rangeland Cover",
      "icon": '<span aria-hidden="true">üåæ</span>',
      "content": modify_rangeland_content
    }
  ] %}
{% endif %}

{% set map_tabs = map_tabs + [
  {
    "id": "results",
    "label": "Results",
    "icon": '<span aria-hidden="true">üìä</span>',
    "content": results_content
  }
] %}

{% call ui.control_shell(
     form_id="setloc_form",
     title="Map",
     collapsible=False,
     status_panel_override='',
     summary_panel_override='',
     stacktrace_panel_override=''
   ) %}
  <div class="wc-map-controls">
    <div class="wc-map-controls__input">
      {{ ui.text_field(
           "input_centerloc",
           "Center or ID search",
           placeholder="Lon, Lat, [Zoom] | TopazID | WeppID",
           attrs={"autocomplete": "off", "inputmode": "text"},
           help="Enter coordinates (lon, lat, optional zoom) or a Topaz/Wepp ID."
         ) }}
    </div>
    <div class="wc-map-controls__actions">
      {% call button_row() %}
        <button type="button" class="pure-button pure-button-primary" id="btn_setloc">Go</button>
        <button type="button" class="pure-button pure-button-secondary" id="btn_find_topaz_id">Find Topaz ID</button>
        <button type="button" class="pure-button pure-button-secondary" id="btn_find_wepp_id">Find WEPP ID</button>
      {% endcall %}
    </div>
  </div>

  <div class="wc-map-layout">
    <div class="wc-map-layout__canvas">
      <div class="wc-map">
        <div id="mapid" class="wc-map__canvas" role="application" aria-label="Watershed map viewport"></div>
      </div>
      <div class="wc-map-status" aria-live="polite">
        <span id="mapstatus"></span>
        <span class="wc-map-status__spacer" aria-hidden="true"></span>
        <span id="mouseelev"></span>
      </div>
    </div>
    <div class="wc-map-layout__inspector">
      {{ ui.tabset(map_tabs) }}
    </div>
  </div>
{% endcall %}
