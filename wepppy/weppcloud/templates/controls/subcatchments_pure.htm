{# Doc: controllers_js/README.md â€” Subcatchment Delineation Controller (2025 helper migration) #}
{% import "controls/_pure_macros.html" as ui %}
{% from "shared/console_macros.htm" import button_row %}

{% call ui.control_shell(
     form_id="build_subcatchments_form",
     title="Subcatchments Delineation"
   ) %}

  {% call ui.collapsible_card("Advanced options", expanded=False) %}
    {% if watershed.delineation_backend_is_topaz or watershed.delineation_backend_is_wbt %}
      <input type="hidden" id="input_pkcsa" value="-1" name="pkcsa">
      <input type="hidden" id="input_pkcsa_en" value="-1" name="pkcsa_en">
    {% else %}
      <div class="unitizer-wrapper">
        <div class="unitizer units-ha">
          <div class="wc-field">
            <label class="wc-field__label" for="input_pkcsa">Peuker Douglas CSA (ha)</label>
            <input
              id="input_pkcsa"
              name="pkcsa"
              class="wc-field__control disable-readonly"
              type="text"
              value="{{ watershed.pkcsa }}"
              data-convert-target="#input_pkcsa_en"
              data-convert-func="ha_to_ac"
              data-convert-decimals="2">
          </div>
        </div>
        <div class="unitizer units-acre">
          <div class="wc-field">
            <label class="wc-field__label" for="input_pkcsa_en">Peuker Douglas CSA (acre)</label>
            <input
              id="input_pkcsa_en"
              name="pkcsa_en"
              class="wc-field__control disable-readonly"
              type="text"
              value="{% if isfloat(watershed.pkcsa) %}{{ watershed.pkcsa * 2.47105 }}{% else %}{{ watershed.pkcsa }}{% endif %}"
              data-convert-target="#input_pkcsa"
              data-convert-func="ac_to_ha"
              data-convert-decimals="2">
          </div>
        </div>
      </div>
    {% endif %}

    {% if wepp.multi_ofe %}
      <h4>Multiple OFE parameters</h4>
      <div class="wc-field">
        <label class="wc-field__label" for="input_mofe_target_length">OFE target length (m)</label>
        <input
          id="input_mofe_target_length"
          name="mofe_target_length"
          class="wc-field__control disable-readonly"
          type="text"
          value="{{ watershed.mofe_target_length }}">
      </div>

      <h4>Buffers</h4>
      <div class="wc-field wc-field--checkbox">
        <label class="wc-choice wc-choice--checkbox">
          <input
            id="checkbox_mofe_buffer"
            name="mofe_buffer"
            type="checkbox"
            class="disable-readonly"
            {% if watershed.mofe_buffer %}checked{% endif %}>
          <span class="wc-choice__label">Apply buffers</span>
        </label>
      </div>

      <div class="wc-field">
        <label class="wc-field__label" for="input_mofe_buffer_length">Target buffer length (m)</label>
        <input
          id="input_mofe_buffer_length"
          name="mofe_buffer_length"
          class="wc-field__control disable-readonly"
          type="text"
          value="{{ watershed.mofe_buffer_length }}">
      </div>
    {% else %}
      {% if watershed.abstraction_backend_is_peridot %}
        <div class="wc-field wc-field--checkbox">
          <label class="wc-choice wc-choice--checkbox">
            <input
              id="checkbox_bieger2015_widths"
              name="bieger2015_widths"
              type="checkbox"
              class="disable-readonly"
              {% if watershed.bieger2015_widths %}checked{% endif %}>
            <span class="wc-choice__label">
              Calculate channel widths based on uparea (Bieger 2015 Rocky Mountain System Model)
            </span>
          </label>
        </div>
      {% else %}
        <p class="wc-text-muted">No advanced options currently available.</p>
      {% endif %}
    {% endif %}
  {% endcall %}

  <div class="wc-stack hide-readonly">
    {% call button_row() %}
      <button
        id="btn_build_subcatchments"
        class="pure-button pure-button-primary"
        type="button"
        data-subcatchment-action="build">
        <img
        id="build_subcatchments_lock"
        src="{{ url_for('static', filename='open-iconic/png/lock-locked-2x.png') }}"
        alt=""
        style="display:none; margin-right: var(--wc-space-xs);">
        Build Subcatchments
      </button>
    {% endcall %}
    <small id="hint_build_subcatchments" class="wc-text-muted"></small>
  </div>

{% endcall %}
