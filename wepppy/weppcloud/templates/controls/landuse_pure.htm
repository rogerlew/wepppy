{% import "controls/_pure_macros.html" as ui %}
{% from "shared/console_macros.htm" import button_row %}

{% set current_mode = landuse.mode.value if landuse.mode is not none else 0 %}

{% set mode_options = [
  {
    "id": "landuse_mode0",
    "label": "Determine per hillslope",
    "value": "0",
    "selected": current_mode == 0,
    "attrs": {"class": "disable-readonly", "data-landuse-mode": "0", "data-landuse-role": "mode"}
  },
  {
    "id": "landuse_mode1",
    "label": "Single landuse for watershed",
    "value": "1",
    "selected": current_mode == 1,
    "attrs": {"class": "disable-readonly", "data-landuse-mode": "1", "data-landuse-role": "mode"}
  }
] %}
{% if 'rred' in ron.mods %}
  {% set mode_options = mode_options + [
    {
      "id": "landuse_mode2",
      "label": "RRED Unburned",
      "value": "2",
      "selected": current_mode == 2,
      "attrs": {"class": "disable-readonly", "data-landuse-mode": "2", "data-landuse-role": "mode"}
    },
    {
      "id": "landuse_mode3",
      "label": "RRED Burned",
      "value": "3",
      "selected": current_mode == 3,
      "attrs": {"class": "disable-readonly", "data-landuse-mode": "3", "data-landuse-role": "mode"}
    }
  ] %}
{% endif %}
{% set mode_options = mode_options + [
  {
    "id": "landuse_mode4",
    "label": "Upload landcover map",
    "value": "4",
    "selected": current_mode == 4,
    "attrs": {"class": "disable-readonly", "data-landuse-mode": "4", "data-landuse-role": "mode"}
  }
] %}

{% set landcover_ns = namespace(options=[]) %}
{% for dataset in landcover_datasets if landcover_datasets is defined %}
  {% set option_label = dataset.label %}
  {% if dataset.description and dataset.management_file %}
    {% set option_label = dataset.description ~ ' (' ~ dataset.management_file ~ ')' %}
  {% endif %}
  {% set landcover_ns.options = landcover_ns.options + [(dataset.key, option_label)] %}
{% endfor %}
{% if not landcover_ns.options %}
  {% set landcover_ns.options = [(landuse.nlcd_db, landuse.nlcd_db)] %}
{% endif %}

{% set single_ns = namespace(options=[]) %}
{% for option in landuseoptions %}
  {% set single_ns.options = single_ns.options + [(option['Key'], option['Key'] ~ ' — ' ~ option['Description'])] %}
{% endfor %}

{% set mapping_ns = namespace(options=[]) %}
{% for option in landuse_management_mapping_options %}
  {% set mapping_ns.options = mapping_ns.options + [(option['Key'], option['Key'] ~ ' — ' ~ option['Description'])] %}
{% endfor %}

{% set status_panel_override %}
  {% call ui.status_panel(
       id="landuse_status_panel",
       title="Status",
       variant="compact",
       log_id="status",
       height="4rem"
     ) %}
    <div id="rq_job" class="wc-status-panel__meta" aria-live="polite"></div>
    <span id="braille" class="wc-status-panel__meta" aria-hidden="true"></span>
  {% endcall %}
{% endset %}

{% call ui.control_shell(
     form_id="landuse_form",
     title="Landuse Options",
     collapsible=False,
     status_panel_override=status_panel_override,
     summary_panel_override=ui.legacy_summary_panel(),
     stacktrace_panel_override=ui.stacktrace_panel(
       id="landuse_stacktrace_panel",
       summary="Details",
       collapsed=True,
       body_id="stacktrace",
       empty_state="No stack trace recorded."
     )
   ) %}

  {{ ui.radio_group(
       "landuse_mode",
       label="Landuse mode",
       layout="vertical",
       options=mode_options
     ) }}

  {% set mode0_style = '' if current_mode == 0 else 'display: none;' %}
  <div id="landuse_mode0_controls" class="wc-stack hide-readonly"{% if mode0_style %} style="{{ mode0_style }}"{% endif %}>
    {{ ui.select_field(
         "landuse_db",
         "Select landcover dataset",
         landcover_ns.options,
         selected=landuse.nlcd_db,
         help="Choose the raster catalog used when landuse is determined per hillslope.",
         attrs={"data-landuse-role": "db"},
         extra_control_class="disable-readonly"
       ) }}
  </div>

  {% set mode1_style = '' if current_mode == 1 else 'display: none;' %}
  <div id="landuse_mode1_controls" class="wc-stack hide-readonly"{% if mode1_style %} style="{{ mode1_style }}"{% endif %}>
    {{ ui.select_field(
         "landuse_single_selection",
         "Select landuse",
         single_ns.options,
         selected=landuse.single_selection,
         help="Assign the chosen management class to the entire watershed.",
         attrs={"data-landuse-role": "single-selection"},
         extra_control_class="disable-readonly"
       ) }}
  </div>

  {% set mode2_style = '' if current_mode == 2 else 'display: none;' %}
  <div id="landuse_mode2_controls" class="wc-stack hide-readonly"{% if mode2_style %} style="{{ mode2_style }}"{% endif %}></div>

  {% set mode3_style = '' if current_mode == 3 else 'display: none;' %}
  <div id="landuse_mode3_controls" class="wc-stack hide-readonly"{% if mode3_style %} style="{{ mode3_style }}"{% endif %}></div>

  {% set mode4_style = '' if current_mode == 4 else 'display: none;' %}
  <div id="landuse_mode4_controls" class="wc-stack hide-readonly"{% if mode4_style %} style="{{ mode4_style }}"{% endif %}>
    <p class="wc-text-muted">Upload a thematic landcover raster (.img or .tif) whose values align with the selected management map.</p>
    {{ ui.file_upload(
         "input_upload_landuse",
         "Upload landcover map",
         accept=".img,.tif",
         extra_control_class="disable-readonly"
       ) }}
    {{ ui.select_field(
         "landuse_management_mapping_selection",
         "Select management mapping",
         mapping_ns.options,
         selected=landuse.mapping,
         help="Mappings define how raster values translate to WEPP management files.",
         extra_control_class="disable-readonly"
       ) }}
    <p class="wc-field__help">See <a href="https://github.com/rogerlew/wepppy/tree/master/wepppy/wepp/management/data" target="_blank" rel="noopener">management mapping definitions</a>.</p>
  </div>

  {% call ui.collapsible_card(title="Advanced options", description="Optional buffers and disturbance toggles.") %}
    {% if wepp.multi_ofe %}
      {{ ui.select_field(
           "mofe_buffer_selection",
           "Select landuse for buffer",
           single_ns.options,
           selected=landuse.mofe_buffer_selection,
           extra_control_class="disable-readonly"
         ) }}
    {% endif %}

    {% if 'disturbed' in ron.mods %}
      {{ ui.checkbox_field(
           "checkbox_burn_shrubs",
           "Burn shrubs based on SBS",
           checked=disturbed.burn_shrubs,
           attrs={"class": "disable-readonly"}
         ) }}
      {{ ui.checkbox_field(
           "checkbox_burn_grass",
           "Burn grass based on SBS",
           checked=disturbed.burn_grass,
           attrs={"class": "disable-readonly"}
         ) }}
    {% endif %}
  {% endcall %}

  {% call button_row() %}
    <button
      type="button"
      class="pure-button pure-button-primary disable-readonly"
      id="btn_build_landuse"
      data-landuse-action="build">
      Build Landuse
    </button>
  {% endcall %}
  <p id="hint_build_landuse" class="wc-text-muted" aria-live="polite"></p>

{% endcall %}
