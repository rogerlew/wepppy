{% extends "reports/_page_container.htm" %}
{% block report_title %}Return Periods{% endblock %}
{% block report_content %}
<h3>WEPPcloud Return Period Analysis</h3>

<div class="mt-2">
  <label for="yearSelection">Year Selection:</label>
  <select id="yearSelection" class="form-control" style="width: 200px;">
    <option value="./?extraneous={{ extraneous | tojson }}" {{ 'selected' if report.exclude_yr_indxs is none }}>
      All years included
    </option>
    <option value="./?extraneous={{ extraneous | tojson }}&exclude_yr_indxs=0" {{ 'selected' if
      report.exclude_yr_indxs==[0] }}>
      Exclude first year
    </option>
    <option value="./?extraneous={{ extraneous | tojson }}&exclude_yr_indxs=0,1" {{ 'selected' if
      report.exclude_yr_indxs==[0, 1] }}>
      Exclude first two years
    </option>
    <option value="./?extraneous={{ extraneous | tojson }}&exclude_yr_indxs=0,1,2,3,4" {{ 'selected' if
      report.exclude_yr_indxs==[0, 1, 2, 3, 4] }}>
      Exclude first five years
    </option>
    {% if report.exclude_yr_indxs and report.exclude_yr_indxs not in ([], [0], [0,1], [0,1,2,3,4]) %}
    <option value="./?exclude_yr_indxs={{ report.exclude_yr_indxs|join(',') }}" selected>
      Custom: {{ report.exclude_yr_indxs|join(', ') }}
    </option>
    {% endif %}
  </select>
</div>

<br />

<!-- Channel of interest -->
<div class="mt-2" {% if chn_topaz_id_options|length < 2 %} style="display: none;" {% endif %}>
  <label for="chnTopazSelect">Channel of Interest:</label>
  <select id="chnTopazSelect" class="form-control" style="width: 200px;">
    {% for topaz_id in (chn_topaz_id_options|sort) %}
    <option value="{{ topaz_id }}" {{ 'selected' if chn_topaz_id_of_interest==topaz_id }}>
      {% if topaz_id == 24 %}
      Outlet (24)
      {% else %}
      Channel {{ topaz_id }}
      {% endif %}
    </option>
    {% endfor %}
  </select>
</div>

<!-- Advanced Options -->
<div class="mt-3">
  <a href="#climate_advanced_opts_con" data-toggle="collapse" class aria-expanded="true">Advanced Options</a>
</div>

<div class="collapse mt-2" id="climate_advanced_opts_con">
  <div class="card card-body">
    <form id="excludeMonthsForm" onsubmit="return submitAdvancedOpts(event)">
      <!-- Gringorten correction -->
      <div class="form-check mb-3">
        <input class="form-check-input" type="checkbox" id="gringortenCheckbox" {% if gringorten_correction %}checked{%
          endif %}>
        <label class="form-check-label" for="gringortenCheckbox">
          Apply Gringorten correction
        </label>
        <div class="small text-muted">
          Uses plotting position <code>T = (N + 0.12) / (m − 0.44)</code> to slightly
          bias-correct ranks and improve tail behavior vs. Weibull’s <code>(N + 1)/m</code>.
        </div>
      </div>

      <!-- Exclude months -->
      <label class="mb-2 d-block">Exclude months from analysis</label>
      <div class="d-flex flex-wrap">
        {% set months = [
        (1,'Jan'),(2,'Feb'),(3,'Mar'),(4,'Apr'),
        (5,'May'),(6,'Jun'),(7,'Jul'),(8,'Aug'),
        (9,'Sep'),(10,'Oct'),(11,'Nov'),(12,'Dec')
        ] %}
        {% for num,abbr in months %}
        <div class="form-check form-check-inline mb-2 mr-3">
          <input class="form-check-input" type="checkbox" id="m{{ num }}" value="{{ num }}">
          <label class="form-check-label" for="m{{ num }}">{{ abbr }}</label>
        </div>
        {% endfor %}
      </div>

      <div class="mt-3">
        <button type="submit" class="btn btn-primary btn-sm">Run report</button>
        <button type="button" class="btn btn-link btn-sm" id="clearMonths">Clear all</button>
        <button type="button" class="btn btn-link btn-sm" id="selectAllMonths">Select all</button>
      </div>
    </form>
  </div>
</div>

<p>
  {% if gringorten_correction %}
  <br>Return periods are estimated using the <strong>Gringorten</strong> plotting position on the annual maxima
  series:</br>
<div style="margin-left: 50px">
  <i>T</i> = (<i>N</i> + 0.12) / (<i>m</i> - 0.44),</br>
  where <i>T</i> is the return period, <i>N</i> is the number of simulated daily values, and <i>m</i> is the rank of the
  daily events.
</div>
<small class="text-muted" style="margin-left: 50px">
  Gringorten applies a small bias correction and is often preferred for hydrologic frequency analysis at distribution
  tails.
</small>
{% else %}
<br>The return period of the events is estimated using the <strong>Weibull</strong> plotting position on the annual
maxima series:</br>
<div style="margin-left: 50px">
  <i>T</i> = (<i>N</i> + 1)/<i>m</i>,</br>
  where <i>T</i> is the return period, <i>N</i> is the number of simulated daily values, and <i>m</i> is the rank of the
  daily events.
</div>
<small class="text-muted" style="margin-left: 50px">
  Weibull’s <code>(N+1)/m</code> is simple and widely used.
</small>
{% endif %}
</p>

<br />
<dl class="dl-horizontal">
  <dt>Years in Simulation</dt>
  <dd>{{ report.years }}</dd>
  <dt>Events in Simulation</dt>
  <dd>{{ report.num_events }}</dd>
</dl>
<br />
<p>
  For post-disturbance model runs (e.g. prescribed fire, wildfire, thinning, etc.) results represent recurrences for
  specific parameters given the first year post-disturbance only. For example, if the peak discharge for a 20-year
  return
  interval is 5 m³/s, specific parameters given the first year post-disturbance only. For example, if the peak discharge
  for a 20-year return interval is 5 m³/s, this means that there is a 1/20, or 5%, chance that the peak discharge will
  reach or exceed 5 m³/s on any given year. This probability is
  based on statistical analysis of historical data and does not imply that such an event will occur exactly once in
  20 years, but rather that it could occur more or less frequently based on random variation.</p>

{% if extraneous %}
<div class="alert alert-info"><strong>Note:</strong>
  The gray column denotes the recurrence for the parameter.
  The white columns provide corresponding information for each event.
</div>
<a href="#" id="toggleExtraneous" data-target-state="false">Hide extraneous parameters in tables.</a>
{% else %}
<a href="#" id="toggleExtraneous" data-target-state="true">Show extraneous parameters in tables.</a>
{% endif %}

<br />
<br />
{% for key in ['Precipitation Depth', 'Runoff', 'Peak Discharge',
'10-min Peak Rainfall Intensity',
'15-min Peak Rainfall Intensity',
'30-min Peak Rainfall Intensity',
'Sediment Yield',
'Hill Sed Del',
'Hill Streamflow'] %}
{% if key in report.return_periods %}
{% if extraneous %}
{% include("reports/wepp/_return_period_extraneous_table.htm") %}
{% else %}
{% include("reports/wepp/_return_period_simple_table.htm") %}
{% endif %}
{% endif %}
{% endfor %}

{% if report.has_phosphorus %}
{% for key in ['Soluble Reactive P', 'Particulate P', 'Total P'] %}
{% if extraneous %}
{% include("reports/wepp/_return_period_extraneous_table.htm") %}
{% else %}
{% include("reports/wepp/_return_period_simple_table.htm") %}
{% endif %}
{% endfor %}
{% endif %}
<h4>Additional Resources</h4>
<h5>Culvert Diameter Size Spreadsheet</h5>
<a href="{{ url_for('static', filename='resources/1403_Culvert_Dia_Math.xlsx') }}">Download Spreadsheet (.xlsx)</a>
Courtesy of William J. Elliot
<script>
  function parseExcludeMonthsFromURL() {
    const sp = new URLSearchParams(window.location.search);
    const raw = sp.get('exclude_months');
    if (!raw) return [];
    return raw.split(',').map(s => parseInt(s.trim(), 10))
      .filter(n => Number.isInteger(n) && n >= 1 && n <= 12)
      .sort((a, b) => a - b);
  }

  function parseGringortenFromURL() {
    const sp = new URLSearchParams(window.location.search);
    return (sp.get('gringorten_correction') || 'false').toLowerCase() === 'true';
  }

  function setAdvancedVisibility(showIt) {
    const con = document.getElementById('climate_advanced_opts_con');
    const tog = document.querySelector('a[href="#climate_advanced_opts_con"][data-toggle="collapse"]');
    if (!con || !tog) return;
    if (showIt) {
      con.classList.add('show');
      tog.setAttribute('aria-expanded', 'true');
    } else {
      con.classList.remove('show');
      tog.setAttribute('aria-expanded', 'false');
    }
  }

  function submitAdvancedOpts(e) {
    e.preventDefault();

    // Selected months (1..12)
    const checkedMonths = Array.from(
      document.querySelectorAll('#excludeMonthsForm input[type="checkbox"][id^="m"]:checked')
    ).map(cb => parseInt(cb.value, 10)).sort((a, b) => a - b);

    // Gringorten toggle
    const gring = !!document.getElementById('gringortenCheckbox')?.checked;

    // Start from the yearSelection target URL (so year exclusion choice sticks)
    const yearSel = document.getElementById('yearSelection');
    const base = new URL(yearSel ? yearSel.value : window.location.pathname, window.location.href);

    // Merge with current params to preserve extras
    const current = new URL(window.location.href);
    const params = new URLSearchParams(base.search);
    current.searchParams.forEach((v, k) => { if (!params.has(k)) params.set(k, v); });

    // Set months
    if (checkedMonths.length) params.set('exclude_months', checkedMonths.join(','));
    else params.delete('exclude_months');

    // Set gringorten explicitly for consistency
    params.set('gringorten_correction', gring ? 'true' : 'false');

    // Navigate
    window.location.href = current.pathname + '?' + params.toString();
    return false;
  }

  document.addEventListener('DOMContentLoaded', function () {
    // Init from URL
    const months = parseExcludeMonthsFromURL();
    const gring = parseGringortenFromURL();

    // Check months from URL
    months.forEach(m => {
      const el = document.getElementById('m' + m);
      if (el) el.checked = true;
    });

    // Check gringorten from URL (overrides server default if user typed URL)
    const grChk = document.getElementById('gringortenCheckbox');
    if (grChk) grChk.checked = gring;

    // Open advanced if user has any months selected OR gringorten is true
    setAdvancedVisibility(months.length > 0 || gring);

    // Quick actions for months
    const form = document.getElementById('excludeMonthsForm');
    if (form) {
      const boxes = () => Array.from(form.querySelectorAll('input[type="checkbox"][id^="m"]'));
      const clearBtn = document.getElementById('clearMonths');
      const allBtn = document.getElementById('selectAllMonths');
      if (clearBtn) clearBtn.addEventListener('click', () => boxes().forEach(cb => cb.checked = false));
      if (allBtn) allBtn.addEventListener('click', () => boxes().forEach(cb => cb.checked = true));
    }

    // yearSelection: preserve extraneous + other advanced params
    const sel = document.getElementById('yearSelection');
    if (sel) {
      sel.addEventListener('change', function () {
        const target = new URL(this.value, window.location.href);
        const cur = new URL(window.location.href);

        ['gringorten_correction', 'exclude_months', 'extraneous', 'chn_topaz_id_of_interest']
          .forEach(k => {
            if (cur.searchParams.has(k)) target.searchParams.set(k, cur.searchParams.get(k));
            else target.searchParams.delete(k);
          });

        window.location.href = target.pathname + '?' + target.searchParams.toString();
      });
    }

    // Channel select: set/remove chn_topaz_id_of_interest, preserve others
    const chnSel = document.getElementById('chnTopazSelect');
    if (chnSel) {
      chnSel.addEventListener('change', function () {
        const url = new URL(window.location.href);
        const v = (this.value || '').trim();
        if (v) url.searchParams.set('chn_topaz_id_of_interest', v);
        else url.searchParams.delete('chn_topaz_id_of_interest');
        window.location.href = url.pathname + '?' + url.searchParams.toString();
      });
    }

    // Extraneous toggle: flip extraneous, preserve everything else
    const toggle = document.getElementById('toggleExtraneous');
    if (toggle) {
      toggle.addEventListener('click', function (e) {
        e.preventDefault();
        const desired = this.getAttribute('data-target-state') || 'false';
        const url = new URL(window.location.href);
        url.searchParams.set('extraneous', desired);
        // leave all other params as-is (exclude_yr_indxs, exclude_months, gringorten_correction, etc.)
        window.location.href = url.pathname + '?' + url.searchParams.toString();
      });
    }
  });

</script>
{% endblock %}