<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>{% block report_title %}{% endblock %}{% if ron.name != '' %} - {{ ron.name }}{% endif %}</title>
    <!-- Style Sheets -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
        integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/style.css') }}">
    <link rel="shortcut icon" href="{{ url_for('static', filename='favicon/favicon2.ico') }}" type="image/x-icon">
    <link rel="icon" href="{{ url_for('static', filename='favicon/favicon2.ico') }}" type="image/x-icon">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script type="text/javascript">

        "use strict";

        var site_prefix = "{{ site_prefix }}";
        var runid = "{{ ron.runid }}";
        var config = "{{ ron.config_stem }}";

        $(document).ready(function () {
            "use strict";

            var project = Project.getInstance();
            //
            // Units
            //


            $("[name^=unitizer_]").change(function () {
                console.log("name^=unitizer_");

                project.unitChangeEvent();
            });

            $("[name=uni_main_selector]").change(function () {
                console.log("name=uni_main_selector");

                var pref = $("input[name='uni_main_selector']:checked").val();
                pref = parseInt(pref, 10);

                // this lives in the controller/unitizer.js template
                // so it can be generated dynamically
                setGlobalUnitizerPreference(pref);

                // sync with server
                project.unitChangeEvent();
            });

            project.unitChangeEvent();


            // konami code!
            Mousetrap.bind('up up down down left right left right b a', function () {
                $('#btnPuModal').click();
            });

        });

    </script>
    <style>
        body {
            font: 16px sans-serif;
        }

        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }

        .brush .selection {
            stroke: #fff;
            fill-opacity: .15;
            shape-rendering: crispEdges;
        }

        .brush .handle {
            fill: #666;
            stroke: #000;
        }

        .x.axis path {
            display: none;
        }

        .line {
            fill: none;
            stroke: steelblue;
            stroke-width: 1.5px;
            clip-path: url(#clip);
        }
    </style>
</head>

<body>
    {% include 'header.htm'%}
    <div role="main" class="container-full">
        <h2>Daily Runoff/Lateral Flow/Baseflow</h5>

            <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
            <div id="area1"></div>
            <script>
                const margin = { top: 10, right: 100, bottom: (window.innerHeight - 80) * 0.2, left: 40 },
                    margin2 = { top: (window.innerHeight - 80) * 0.80, right: 100, bottom: 70, left: 40 },
                    width = window.innerWidth * 0.95 - margin.left - margin.right,
                    height = window.innerHeight * 0.95 - 80 - margin.top - margin.bottom,
                    height2 = window.innerHeight * 0.95 - 80 - margin2.top - margin2.bottom;

                const parseDate = d3.timeParse("%Y%m%d");

                const x = d3.scaleTime().range([0, width]);
                const xC = d3.scaleTime().range([0, width]);
                const y = d3.scaleLinear().range([height, 0]);
                const yC = d3.scaleLinear().range([height2, 0]);

                const color = d3.scaleOrdinal(d3.schemeCategory10);

                const xAxis = d3.axisBottom(x);
                const xAxisC = d3.axisBottom(xC);
                const yAxis = d3.axisLeft(y);
                const yAxisC = d3.axisLeft(yC).ticks(2);

                const brush = d3.brushX()
                    .extent([[0, 0], [width, height2]])
                    .on("brush end", brushed);

                const line = d3.line()
                    .defined(d => d.datavalue !== -9999)
                    .x(d => x(d.date))
                    .y(d => y(d.datavalue));

                const lineC = d3.line()
                    .defined(d => d.datavalue !== -9999)
                    .x(d => x(d.date)) // same x scale (focus updated on brush)
                    .y(d => yC(d.datavalue));

                const svg = d3.select("#area1").append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom);

                svg.append("defs").append("clipPath")
                    .attr("id", "clip")
                    .append("rect")
                    .attr("width", width)
                    .attr("height", height);

                const focus = svg.append("g")
                    .attr("class", "focus")
                    .attr("transform", `translate(${margin.left},${margin.top})`);

                const context = svg.append("g")
                    .attr("class", "context")
                    .attr("transform", `translate(${margin2.left},${margin2.top})`);

                d3.csv(
                    `../../../resources/wepp/daily_streamflow.csv?exclude_yr_indxs={{ exclude_yr_indxs }}&stacked=true`,
                    d => { d.date = parseDate(d.date); return d; }
                ).then(data => {

                    const allCols = Object.keys(data[0]).filter(k => k !== "date");
                    const wanted = allCols.filter(k => /^(Runoff|LateralFlow|Baseflow)$/i.test(k));  // adjust names

                    color.domain(wanted);

                    const sites = wanted.map(name => ({
                        name,
                        values: data.map(d => ({ date: d.date, datavalue: +d[name] }))
                    }));

                    x.domain(d3.extent(data, d => d.date));
                    const yMin = d3.min(sites, c => d3.min(c.values, v => v.datavalue >= 0 ? v.datavalue : 0));
                    const yMax = d3.max(sites, c => d3.max(c.values, v => v.datavalue));
                    y.domain([yMin, yMax]);
                    xC.domain(x.domain());
                    yC.domain(y.domain());

                    focus.append("g")
                        .attr("class", "x axis")
                        .attr("transform", `translate(0,${height})`)
                        .call(xAxis);

                    focus.append("g")
                        .attr("class", "y axis")
                        .call(yAxis)
                        .append("text")
                        .attr("transform", "rotate(-90)")
                        .attr("y", 6)
                        .attr("dy", ".71em")
                        .style("text-anchor", "end")
                        .text("Streamflow (mm)");

                    const site = focus.selectAll(".site")
                        .data(sites)
                        .enter().append("g")
                        .attr("class", "site");

                    site.append("path")
                        .attr("class", "line")
                        .attr("d", d => line(d.values))
                        .style("stroke", d => color(d.name));

                    let c = 0;
                    site.append("text")
                        .datum(d => ({ name: d.name, value: d.values[d.values.length - 1] }))
                        .attr("transform", d => {
                            c += 1;
                            return `translate(${x(d.value.date)},${y(d.value.datavalue) - c * 20})`;
                        })
                        .attr("x", 3)
                        .attr("dy", ".35em")
                        .style("stroke", d => color(d.name))
                        .text(d => d.name);

                    context.append("g")
                        .attr("class", "x axis")
                        .attr("transform", `translate(0,${height2})`)
                        .call(xAxisC);

                    context.append("g")
                        .attr("class", "y axis")
                        .call(yAxisC);

                    const siteC = context.selectAll(".site")
                        .data(sites)
                        .enter().append("g")
                        .attr("class", "site");

                    siteC.append("path")
                        .attr("class", "line")
                        .attr("d", d => lineC(d.values))
                        .style("stroke", d => color(d.name));

                    context.append("g")
                        .attr("class", "x brush")
                        .call(brush)
                        .call(brush.move, x.range());

                    context.select(".x.brush").selectAll(".handle").attr("display", null);

                    context.append("text")
                        .attr("class", "y axis")
                        .attr("transform", `translate(${width / 2},${height2 + margin2.bottom})`)
                        .style("text-anchor", "middle")
                        .text("Year");
                });

                function brushed(event) {
                    const sel = event.selection;
                    if (sel) {
                        const domain = sel.map(xC.invert);
                        x.domain(domain);
                    } else {
                        x.domain(xC.domain());
                    }
                    focus.selectAll('.line').attr("d", d => line(d.values));
                    focus.select(".x.axis").call(xAxis);
                }
            </script>
            {% include 'controls/unitizer_modal.htm'%}
            {% include 'controls/poweruser_panel.htm'%}
    </div> <!--main container -->

    <!-- Placed at the end of the document so the pages load faster -->
    <script type="text/javascript" src="{{ url_for('static', filename='js/tinyqueue.js') }}"></script>
    <script type="text/javascript" src="{{ url_for('static', filename='js/polylabel.js') }}"></script>
    <script type="text/javascript" src="{{ url_for('static', filename='js/underscore.js') }}"></script>
    <script type="text/javascript" src="{{ url_for('static', filename='js/copytext.js') }}?20180904"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
        crossorigin="anonymous"></script>
    <script type="text/javascript" src="{{ url_for('static', filename='js/mousetrap.js') }}"></script>
    <script src="/weppcloud/static/js/sorttable.js"></script>
</body>

</html>