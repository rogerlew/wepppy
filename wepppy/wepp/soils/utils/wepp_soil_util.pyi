from __future__ import annotations

from typing import Any, Dict, Optional

class WeppSoilUtil:
    obj: Dict[str, Any]
    fn: str

    def __init__(
        self,
        fn: str,
        compute_erodibilities: bool = ...,
        compute_conductivity: bool = ...,
    ) -> None: ...
    def modify_initial_sat(self, initial_sat: float) -> None: ...
    def modify_kslast(self, kslast: float, pars: Optional[Dict[str, Any]] = ...) -> None: ...
    def clip_soil_depth(self, max_depth: float) -> None: ...
    def to7778(self, hostname: str = ...) -> WeppSoilUtil: ...
    def to_7778disturbed(
        self,
        replacements: Optional[Dict[str, Any]],
        h0_min_depth: Optional[float] = ...,
        h0_max_om: Optional[float] = ...,
        hostname: str = ...,
    ) -> WeppSoilUtil: ...
    def to9001(self, replacements: Optional[Dict[str, Any]], h0_min_depth: Optional[float] = ..., h0_max_om: Optional[float] = ..., hostname: str = ...) -> WeppSoilUtil: ...
    def to9002(self, replacements: Optional[Dict[str, Any]], h0_min_depth: Optional[float] = ..., h0_max_om: Optional[float] = ..., hostname: str = ...) -> WeppSoilUtil: ...
    def to9003(self, replacements: Optional[Dict[str, Any]], h0_min_depth: Optional[float] = ..., h0_max_om: Optional[float] = ..., hostname: str = ...) -> WeppSoilUtil: ...
    def to9005(self, replacements: Optional[Dict[str, Any]], h0_min_depth: Optional[float] = ..., h0_max_om: Optional[float] = ..., hostname: str = ...) -> WeppSoilUtil: ...
    def to_over9000(
        self,
        replacements: Optional[Dict[str, Any]],
        h0_min_depth: Optional[float] = ...,
        h0_max_om: Optional[float] = ...,
        hostname: str = ...,
        version: int = ...,
    ) -> WeppSoilUtil: ...
    def dump_yaml(self, dst: str) -> None: ...
    def dump_bson(self, dst: str) -> None: ...
    def write(self, fn: str) -> None: ...

    @property
    def datver(self) -> float: ...
    @property
    def sand(self) -> float: ...
    @property
    def clay(self) -> float: ...
    @property
    def avke(self) -> Any: ...
    @property
    def bd(self) -> Optional[float]: ...
    @property
    def soil_depth(self) -> Optional[float]: ...
    @property
    def rock(self) -> Optional[float]: ...
    @property
    def simple_texture(self) -> str: ...
    @property
    def simple_texture_enum(self) -> int: ...
