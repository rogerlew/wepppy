openapi: 3.1.0
info:
  title: WEPPcloud Query Engine MCP API
  version: 0.1.0
  description: |
    Simplified subset of the WEPPcloud Query Engine MCP API for testing with ChatGPT Actions.
    Endpoints expose run metadata and a lightweight health probe. All operations require a
    valid WEPPcloud-issued JWT bearer token.
  contact:
    name: WEPPcloud Dev
    url: https://wepp.cloud/weppcloud/
servers:
  - url: https://wepp.cloud/query-engine/mcp
    description: Production deployment
security:
  - bearerAuth: []
tags:
  - name: Utility
    description: Health probes and supporting endpoints.
  - name: Runs
    description: Discovery and metadata for accessible WEPPcloud runs.
paths:
  /ping:
    get:
      tags: [Utility]
      summary: Check service availability.
      description: Verify that the service is reachable and the provided token is valid.
      operationId: ping
      responses:
        '200':
          description: Service is reachable and the token is valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerAuth: []
  /runs/{runid}:
    get:
      tags: [Runs]
      summary: Retrieve metadata for a specific run.
      description: Returns detailed information about a single run resource.
      operationId: getRun
      parameters:
        - name: runid
          in: path
          required: true
          description: Identifier of the WEPPcloud run.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Metadata for the requested run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDetailResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Provide a WEPPcloud-issued JWT in the Authorization header.
  responses:
    Unauthorized:
      description: Missing or invalid bearer token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    TraceMeta:
      type: object
      properties:
        trace_id:
          type: string
          description: Identifier suitable for correlating logs.
        timestamp:
          type: string
          format: date-time
          description: Timestamp captured when the response was generated.
      required: [trace_id]
    ErrorEntry:
      type: object
      properties:
        code:
          type: string
        detail:
          type: string
      required: [code, detail]
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorEntry'
        meta:
          $ref: '#/components/schemas/TraceMeta'
      required: [errors]
    PingResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              enum: [mcp_ping]
            attributes:
              type: object
              properties:
                service:
                  type: string
                status:
                  type: string
                  enum: [ok]
                principal:
                  type: string
              required: [service, status, principal]
          required: [type, attributes]
        meta:
          $ref: '#/components/schemas/TraceMeta'
      required: [data, meta]
    RunDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RunResource'
        meta:
          type: object
          properties:
            catalog_status:
              type: string
            trace:
              $ref: '#/components/schemas/TraceMeta'
          required: [catalog_status]
      required: [data, meta]
    RunResource:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [run]
        attributes:
          type: object
          properties:
            name:
              type: string
            watershed:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required: [name]
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
            catalog:
              type: string
              format: uri
      required: [id, type, attributes]
